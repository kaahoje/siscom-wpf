@model RestauranteMobile.Models.PedidoModel
@{
    var composicao = Model.Entity.Produtos.FirstOrDefault(x => x.IdGuid == Model.ProdutoPedido.ComposicaoEdit);
}
<script type="text/javascript" language="javascript">
    function RemoveItemComposicao(idComposicao, idProduto) {

        $("#ProdutoPedido_Produto").attr("value", idProduto);
        $("#ProdutoPedido_Composicao").attr("value", idComposicao);
        $.post("@Url.Action("RemoveItemComposicaoPedido","Pedido")", $('#formProduto').serialize(), function (data) {
            $('#content').html(data);
        },'html');
        @*$.ajax({
            url: '@Url.Action("RemoveItemComposicaoPedido","Pedido")',
            type: 'post',
            datatype: 'html',
            data: $("#formProduto").serialize(),
            sucess: function (data) {
                $('#container').html(data);
                return data;
            }
        });*@
    }
</script>

<form id="formProduto">
    @Html.HiddenFor(x => x.ProdutoPedido.Composicao)
    @Html.HiddenFor(x => x.ProdutoPedido.Produto)
    @{
        <div style="visibility: hidden">
            @{
                Html.RenderPartial("_PedidoPartialPage", Model);
            }

        </div>


    }
    @if (composicao != null)
    {
        for (var i = 0; i < composicao.Composicao.Count; i++)
        {
            <table>
                <tr>
                    <td><a onclick="RemoveItemComposicao('@composicao.IdGuid', '@composicao.Composicao[i].IdGuid')" class="btn btn-lg btn-primary">X</a></td>
                    <td>@composicao.Composicao[i].Produto.Descricao</td>
                </tr>
            </table>
        }
    }

</form>